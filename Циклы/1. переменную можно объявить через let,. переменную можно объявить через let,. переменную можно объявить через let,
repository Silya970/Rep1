1. переменную можно объявить через let, var (можно вызвать перед присвоением), const(нельзя изменить заданную изначально переменную и нужно определять ее сразу)

2. типы данных: 
   1.числовой (обычное число или число с точкой. есть два значения - infinity (деление числа на 0) и NaN (вычислительная ошибка))
   
   2.bigInt (целое число рандомной длины, чтобы создать его в конце числа ставишь 'n' )
   
   3.строка (текст заключается в кавычки)
   
   4.логический(boolean) (принимает два значения true/false)
   
   5.null (передает значение: неизвестно, пусто, ничего)
   
   6.undefined (переменная создана без значения)
   
   7.объекты (там хранятся данные) и символы ( используются для создания указателей в обьектах)
   
   8.type of (возвращает тип аргумента)

 3. Чтобы узнать какого типа переменная можно использовать оператор 'typeof x'

 4. typeof возвращает значение(тип) данных в виде строки

 5. унарные операторы(применяется к одному операнду): +, -, ++(инкримент), --(дикримент), префиксный возвращает и прибавляет

 6. бинарные операторы(применяется к двум операндам): +, -, /, *, **(степень), %(остаток от деления)
 возвращает результат выполнения условия между оператором и операндом

 7. тернарный оператор: условие ? а1 : а2   

 8. операторы сравнения: ==, != (не равно), !==, ===(строго равно), > , < , >= , <= 
 возвращает булевый тип

 9. оператором if объявляется  верное или ложное условие. если заданное значение верно, выполняется первая инструкция, если ложно, тогда вторая инструкция
  let a = ... ;
   if (...){
       console.log ('верно');
   } else {
       console.log ('неверно');
   }

   может содержать блок else if, если надо проверить 3 и более варианта условия

 10. логические операторы: &&, || , !     

 11. есть два основных цикла while и for, которые нужны для повторения одного участка кода

 одно выполнения тела цикла(кода) - итеракция;

 while:

 while (условие){
     код;
 }
пока условие истинно, код будет выполняться

do..while:

сначала выполняется код, потом условие до момента пока значение не станет ложным

do{
    код;
} while (условие);


for:

состоит из: начало, условие, шаг, тело
 for (let i = .. , i < .. , i++ ){
       тело;
 }
 можно пропустить часть из цикла только если вынести ее в переменную

 прервать цикл можно двумя способами: break (выпоняет одну итеракцию и выходит из цикла, продолжая выполнять код уже после цикла, если он есть)
    continue (заканчивает одно выполнение тела и может продолжить следующую итерацию, если условие истинно)
    
используются также метки 'name:', чтобы идентифицировать цикл и указать в конце цикла нужно ли прервать(break name) или продолжить цикл (continue name)

12. switch обычно используется вместо несколько if

switch(переменная){
    case 0:
    console.log ("...");
    break;

    case 1:
    console.log ("...");
    break;
}

кейсы можно объединять и при заданном условии будет одно сообщение для обоих кейсов

можно использовать default, если ни один из кейсов не совпадает с заданным условием

13.функция нужна для того, чтобы один раз написав ее, можно было вызвать ее в разных местах кода и сколько захочешь раз

14.объявить функцию можно 3 способами :
   1. function declaration

   function имя (параметры) {
    код; 
    }
   
   2. function expression

   let f = function(параметры) {
   код;
   }

   3. стрелочная функция

   func = (параметры) => результат функции

15. чтобы вызвать функцию нужно указать имя функции и в ( ) можно указать дополнительные аргументы и параметры

16. при объявлении функции в кругых скобках указываешь параметры 

17.можно передать любую информацию в качетсве параметра

18. присвоить начальное значение функции если его не передали можно при вызове функции указав в скобках это значение

19.вернуть какое либо значение можно с помощью return